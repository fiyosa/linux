docker container rm dev-pern-server
docker image rm fiyosa/dev-pern-server:v1

docker build -t fiyosa/dev-pern-server:v1 .

docker run -d \
	--name dev-pern-server \
	--restart=unless-stopped \
	-p 4000:4000 \
	-e "DB_HOST=postgresql" \
	-e "DB_PORT=5432" \
	-e "DB_NAME=fys-myblogs" \
	-e "DB_USER=postgres" \
	-e "DB_PASS=fiyosa" \
	-e "ACCESS_TOKEN_SECRETE=iRPIC3wbTSfTX3V9x8KGCAjpYj1Lngt1Hh3nWfoTvclvyaeWQ1KXTRZhZMOGhbyvvmMpDEbPrCXFovYiL1G77Nnx5Zl0k3BB741s" \
	-e "REFRESH_TOKEN_SECRETE=Sl9OKs3p2BPfuqSWM2FBNdjJDZx2gQ56c7ifInXFPgAcBPxf8JW6gkn1zZYvFcc2sVhOiDLB6kG8ZBbJeBrnWNadpIbghIIwLxS0" \
	-e "TIMEOUT_TOKEN=1000*60" \
	-e "TIMEOUT_REFRESH_TOKEN=1000*60*60*24" \
	--network pern \
	fiyosa/dev-pern-server:v1

docker run -d \
	--name instagram-client \
	--restart=unless-stopped \
	-p 80:80 \
        fiyosa/instagram-client:v1
	node:14.21.3-alpine3.17

docker pull node:14.21.3-alpine3.16
docker pull node:14.21.3-alpine3.17

docker container logs pern-server

docker run --rm -it fiyosa/dev-pern-server:v1 sh

echo "DB_HOST=192.168.229.128
DB_PORT=5432
DB_NAME=fys-myblogs
DB_USER=postgres
DB_PASS=fiyosa

ACCESS_TOKEN_SECRETE =iRPIC3wbTSfTX3V9x8KGCAjpYj1Lngt1Hh3nWfoTvclvyaeWQ1KXTRZhZMOGhbyvvmMpDEbPrCXFovYiL1G77Nnx5Zl0k3BB741s
REFRESH_TOKEN_SECRETE=Sl9OKs3p2BPfuqSWM2FBNdjJDZx2gQ56c7ifInXFPgAcBPxf8JW6gkn1zZYvFcc2sVhOiDLB6kG8ZBbJeBrnWNadpIbghIIwLxS0
TIMEOUT_TOKEN=1000*60
TIMEOUT_REFRESH_TOKEN=1000*60*60*24" > .env

docker build client -t fiyosa/instagram-client:v1
